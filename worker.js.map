{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker.js","webpack:///./node_modules/@cosmic-plus/domutils/es5/service-worker.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ServiceWorker","require","pkg","version","fromCache","precache","register","_regeneratorRuntime","_asyncToGenerator","_classCallCheck","_createClass","TIMEOUT","verbose","this","hostname","location","host","replace","enabled","root","concat","protocol","startByRoot","RegExp","timeout","cacheName","files","message","console","log","keys","_this","self","addEventListener","event","worker","waitUntil","caches","open","then","cache","addAll","skipWaiting","Promise","all","map","request","method","url","match","Request","filename","config","strategy","respondWith","fromNetwork","cacheResponse","response","cacheCopy","clone","put","resolve","reject","timeoutId","setTimeout","fetch","clearTimeout","cacheOrNetwork","_ref","mark","_callee","cached","wrap","_context","prev","next","sent","abrupt","stop","_x","_x2","_x3","apply","arguments","_loop","array","_this2","forEach","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","error","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","reverse","pop","skipTempReset","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","protoProps","staticProps"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\"\n\nconst ServiceWorker = require(\"@cosmic-plus/domutils/es5/service-worker\")\nconst pkg = require(\"../package.json\")\n\nnew ServiceWorker(pkg.name, pkg.version, \"verbose\")\n  .fromCache([\n    // Application\"\n    \"/\",\n    \"app.js\",\n    \"index.css\",\n    \"index.html\",\n    \"index.js\",\n    \"ledger.js\",\n    \"stellar-sdk.js\",\n    \"vendors~app.js\",\n    \"vendors~ledger.js\",\n\n    // Fonts\n    \"fonts/SourceSansPro-Regular.ttf\",\n    \"fonts/RobotoSlab-Regular.ttf\",\n\n    // Images\n    \"images/cosmic-link.svg\",\n\n    // Vendor configuration\n    \"browserconfig.xml\",\n    \"manifest.json\",\n\n    // Icons\n    \"favicon.ico\",\n    \"icons/16x16.png\",\n    \"icons/32x32.png\",\n    \"icons/192x192.png\",\n    \"icons/512x512.png\",\n    \"icons/apple-touch.png\",\n    \"icons/mstile.png\",\n    \"icons/safari.svg\"\n  ])\n  .precache()\n  .register()\n","var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\n/**\n * A configurable service worker.\n */\nvar TIMEOUT = 2000;\n\nvar ServiceWorker = module.exports =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   * Create a new ServiceWorker.\n   *\n   * @param  {String} package Package name\n   * @param  {String} version Package version\n   * @param  {*} verbose ServiceWorker will be verbose if this parameter is set\n   */\n  function ServiceWorker(name, version, verbose) {\n    _classCallCheck(this, ServiceWorker);\n\n    this.name = name;\n    this.version = version;\n    this.verbose = verbose;\n    this.hostname = location.host.replace(/:.*/, \"\");\n    this.enabled = this.hostname !== \"localhost\" && this.hostname !== \"127.0.0.1\";\n    this.root = \"\".concat(location.protocol, \"//\").concat(location.host, \"/\");\n    this.startByRoot = new RegExp(\"^\" + this.root);\n    this.timeout = TIMEOUT;\n    this.cacheName = \"\".concat(name, \"-\").concat(version);\n    this.files = {};\n    this.get = [];\n  }\n  /**\n   * Log **message** if ServiceWorker is verbose.\n   */\n\n\n  _createClass(ServiceWorker, [{\n    key: \"log\",\n    value: function log(message) {\n      // eslint-disable-next-line no-console\n      if (this.verbose) console.log(message);\n    }\n    /**\n     * Set all previously defined files to be pre-cached when ServiceWorker\n     * install itself.\n     */\n\n  }, {\n    key: \"precache\",\n    value: function precache() {\n      this.get = Object.keys(this.files);\n      return this;\n    }\n    /**\n     * Register ServiceWorker.\n     */\n\n  }, {\n    key: \"register\",\n    value: function register() {\n      var _this = this;\n\n      self.addEventListener(\"install\", function (event) {\n        _this.log(\"Installing \".concat(_this.cacheName, \"...\"));\n\n        event.waitUntil(precache(_this, _this.get).then(function () {\n          return self.skipWaiting();\n        }).then(function () {\n          return _this.log(\"\".concat(_this.cacheName, \" installed\"));\n        }));\n      });\n      self.addEventListener(\"activate\", function (event) {\n        event.waitUntil(wipeCachesExcept(_this.cacheName));\n      });\n      self.addEventListener(\"fetch\", function (event) {\n        if (!_this.enabled || event.request.method !== \"GET\") return;\n        if (!event.request.url.match(_this.startByRoot)) return; /// Strip out query string from request.\n\n        var request = new Request(event.request.url.replace(/\\?.*$/, \"\"));\n        var filename = request.url.replace(_this.startByRoot, \"\") || \"index.html\";\n        var config = _this.files[filename];\n\n        if (config && strategy[config]) {\n          event.respondWith(strategy[config](_this, request, filename));\n        } else {\n          event.respondWith(strategy.fromNetwork(_this, request, filename));\n        }\n      });\n    }\n  }]);\n\n  return ServiceWorker;\n}();\n/**\n * Cache **files** into `worker.cacheName`.\n */\n\n\nfunction precache(worker, files) {\n  return caches.open(worker.cacheName).then(function (cache) {\n    return cache.addAll(files);\n  });\n}\n/**\n * Wipe every caches except **cacheName**.\n */\n\n\nfunction wipeCachesExcept(cacheName) {\n  return caches.keys().then(function (keys) {\n    return Promise.all(keys.map(function (key) {\n      if (key !== cacheName) caches[\"delete\"](key);\n    }));\n  });\n}\n/*******************************************************************************\n * Strategies\n */\n\n\nvar strategy = {};\n/**\n * Fetch **request** from cache or reject.\n */\n\nstrategy.fromCache = function (worker, request, filename) {\n  worker.log(\"Looking for \".concat(filename, \" into \").concat(worker.cacheName, \" cache...\"));\n  return caches.open(worker.cacheName).then(function (cache) {\n    return cache.match(request);\n  });\n};\n/**\n * Fetch **request** from network or reject after **timeout**.\n */\n\n\nstrategy.fromNetwork = function (worker, request, filename) {\n  worker.log(\"Downloading \".concat(filename, \"...\"));\n  return new Promise(function (resolve, reject) {\n    var timeoutId = setTimeout(reject, worker.timeout);\n    return fetch(request).then(function (response) {\n      clearTimeout(timeoutId);\n      resolve(response);\n    });\n  });\n};\n/**\n * Resolve **request** using cache, or download and cache.\n */\n\n\nstrategy.cacheOrNetwork =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(worker, request, filename) {\n    var cached, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return strategy.fromCache(worker, request, filename);\n\n          case 2:\n            cached = _context.sent;\n\n            if (!cached) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", cached);\n\n          case 5:\n            _context.next = 7;\n            return strategy.fromNetwork(worker, request, filename);\n\n          case 7:\n            response = _context.sent;\n            cacheResponse(worker, request, response);\n            return _context.abrupt(\"return\", response);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Cache **response** to **request** into **worker** cache.\n */\n\n\nfunction cacheResponse(worker, request, response) {\n  var cacheCopy = response.clone();\n  caches.open(worker.cacheName).then(function (cache) {\n    return cache.put(request, cacheCopy);\n  });\n}\n/*******************************************************************************\n * Merge strategies into ServiceWorker.\n */\n\n\nvar _loop = function _loop(key) {\n  ServiceWorker.prototype[key] = function (array) {\n    var _this2 = this;\n\n    array.forEach(function (filename) {\n      return _this2.files[filename] = key;\n    });\n    return this;\n  };\n};\n\nfor (var key in strategy) {\n  _loop(key);\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;"],"sourceRoot":""}
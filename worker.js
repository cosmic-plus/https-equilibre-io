!function(e){var t={};function s(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(n,i,function(t){return e[t]}.bind(null,i));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=98)}({100:function(e){e.exports=JSON.parse('{"name":"equilibre.io","version":"1.17.0","description":"A portfolio balancer for Stellar Decentralized Exchange","author":"MisterTicot <mister.ticot@cosmic.plus>","homepage":"https://equilibre.io","repository":"github:cosmic-plus/webapp-equilibre.io","license":"MIT","browserslist":"extends @kisbox/browserslist-config","keywords":["cryptocurrency","stellar","dex","portfolio","balancer"],"scripts":{"test":"echo \\"Error: no test specified\\" && exit 1","get":"git submodule update -i --recursive","clean":"rm -rf web/*","prettier":"prettier --write --no-semi --trailing-comma none \'src/**/*.{js,json,md}\' \'*.{js,json,md}\'","eslint":"eslint --fix \'src/**/*.js\' \'*.js\'","lint":"npm run prettier && npm run eslint","set-dev":"sh setenv.sh -d","set-prod":"sh setenv.sh -p","build-i18n":"i18n-extractor all bundled src static","build-js":"webpack -p && cp -f node_modules/stellar-sdk/dist/stellar-sdk.min.js web/stellar-sdk.js","build-scss":"node-sass style/index.scss -o web","build-css":"npm run build-scss && postcss web/index.css -d web","build-static":"cp -a static/. web","build-misc":"cp -f *.md package-lock.json web","build-all":"for i in i18n js css static misc; do npm run build-$i || return; done","build":"npm run clean && npm run set-prod && npm run build-all","rebuild":"npm run get && cp -f web/package-lock.json . && npm ci && npm run build","check":"npm run rebuild && cd web && git status && [ ! \\"$(git status -z)\\" ]","watch-css":"node-sass style/index.scss -wo web","watch-js":"webpack -d --watch","watch-static":"cp -fl static/*.* web","watch":"npm run watch-static && npm run watch-css & npm run watch-js","serve":"npm run set-dev && npm run watch & cd web && live-server --https=../node_modules/live-server-https","commit-web":"cd web && git ci -am \\"$message\\"","commit-main":"git ci -am \\"$message\\"","commit-all":"[ \\"$version\\" ] && npm run commit-web && npm run commit-main","commit-release":"export message=\\"Release $version\\" && npm run commit-all","tag-web":"cd web && git tag -s \\"$version\\" -m \\"$message\\"","tag-main":"git tag -s \\"$version\\" -m \\"$message\\"","tag-all":"[ \\"$version\\" -a \\"$message\\" ] && npm run tag-web && npm run tag-main","tag-release":"export version message=\\"Release $version\\" && npm run tag-all","push-release":"cd web && git push --follow-tags && cd .. && git push --follow-tags","make-release":"npm update && npm run build && npm run commit-release","publish-release":"npm run check && npm run tag-release && npm run push-release"},"devDependencies":{"@babel/core":"^7.15.5","@babel/plugin-syntax-dynamic-import":"^7.8.3","@babel/plugin-transform-runtime":"^7.15.0","@babel/preset-env":"^7.15.6","@cosmic-plus/i18n-extractor":"^1.2.0","@kisbox/browserslist-config":"^1.0.0-beta.21","autoprefixer":"^10.3.4","babel-loader":"^8.2.2","cssnano":"^4.1.11","eslint":"^7.32.0","live-server":"^1.2.1","live-server-https":"0.0.2","node-sass":"^5.0.0","postcss":"^8.3.6","postcss-cli":"^8.3.1","prettier":"^2.4.1","raw-loader":"^1.0.0","webpack":"^4.46.0","webpack-cli":"^3.3.12"},"dependencies":{"@babel/eslint-parser":"^7.15.4","@babel/runtime":"^7.15.4","@cosmic-plus/assets":"^1.6.0","@cosmic-plus/base":"^2.11.0","@cosmic-plus/domutils":"^2.2.0","@cosmic-plus/i18n":"^1.3.0","@cosmic-plus/jsutils":"^2.1.0","@cosmic-plus/ledger-wallet":"^2.8.0","@cosmic-plus/loopcall":"^1.6.0","@cosmic-plus/trezor-wallet":"^1.7.0","@fortawesome/fontawesome-free":"^5.15.4","core-js":"^3.17.3","cosmic-lib":"^2.24.0","highcharts":"^8.2.2"}}')},98:function(e,t,s){"use strict";const n=s(99),i=s(100);new n(i.name,i.version,"verbose").fromCache(["/","app.js","index.css","index.html","index.js","ledger.js","stellar-sdk.js","vendors~app.js","vendors~ledger.js","vendors~trezor.js","fonts/source-sans-pro.woff","fonts/source-sans-pro.woff2","fonts/roboto-slab.woff","fonts/roboto-slab.woff2","images/activity.png","images/balances.png","images/cosmic-link.svg","images/history.png","images/repartition.png","images/side-frame.png","browserconfig.xml","manifest.json","favicon.ico","icons/16x16.png","icons/32x32.png","icons/192x192.png","icons/512x512.png","icons/apple-touch.png","icons/mstile.png","icons/safari.svg"]).precache().register()},99:function(e,t){const s=e.exports=class{constructor(e,t,s){this.name=e,this.version=t,this.verbose=s,this.hostname=location.host.replace(/:.*/,""),this.enabled="localhost"!==this.hostname&&"127.0.0.1"!==this.hostname,this.root="".concat(location.protocol,"//").concat(location.host,"/"),this.startByRoot=new RegExp("^"+this.root),this.timeout=2e3,this.cacheName="".concat(e,"-").concat(t),this.files={},this.get=[]}development(){return this.enabled=!0,this}log(e){this.verbose&&console.log(e)}precache(){return this.get=Object.keys(this.files),this}register(){self.addEventListener("install",e=>{this.log("Installing ".concat(this.cacheName,"...")),e.waitUntil(function(e,t){const s=t.map(t=>"".concat(t,"?version=").concat(e.version));return caches.open(e.cacheName).then(e=>e.addAll(s))}(this,this.get).then(()=>self.skipWaiting()).then(()=>this.log("".concat(this.cacheName," installed"))))}),self.addEventListener("activate",e=>{var t;e.waitUntil((t=this.cacheName,caches.keys().then((function(e){return Promise.all(e.map(e=>{e!==t&&caches.delete(e)}))}))))}),self.addEventListener("fetch",e=>{if(!this.enabled||"GET"!==e.request.method)return;if(!e.request.url.match(this.startByRoot))return;let t=e.request.url.replace(/(\?|#).*$/,""),s=t.replace(this.startByRoot,"");s||(s="index.html",t+="index.html");const i="?version=".concat(this.version),o=new Request("".concat(t).concat(i)),r=this.files[s];r&&n[r]?e.respondWith(n[r](this,o,s)):e.respondWith(n.fromNetwork(this,o,s))})}};const n={};n.fromCache=function(e,t,s){return e.log("Looking for ".concat(s," into ").concat(e.cacheName," cache...")),caches.open(e.cacheName).then(e=>e.match(t))},n.fromNetwork=function(e,t,s){return e.log("Downloading ".concat(s,"...")),new Promise((function(s,n){const i=setTimeout(n,e.timeout);return fetch(t).then((function(e){clearTimeout(i),s(e)}))}))},n.cacheOrNetwork=async function(e,t,s){const i=await n.fromCache(e,t,s);if(i)return i;const o=await n.fromNetwork(e,t,s);return function(e,t,s){const n=s.clone();caches.open(e.cacheName).then(e=>e.put(t,n))}(e,t,o),o};for(let e in n)s.prototype[e]=function(t){return t.forEach(t=>this.files[t]=e),this}}});
//# sourceMappingURL=worker.js.map